// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyBn8EvuLSt6eVIPsjvEZfW5kj_RrUt0q0M',
    appId: '1:274290548961:android:952d333f7f52cd13b217a0',
    messagingSenderId: '274290548961',
    projectId: 'accounts-manager-24563',
    storageBucket: 'accounts-manager-24563.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyD_WIR_5QdnUFp83ySrN0sIvAgNA2LWnA4',
    appId: '1:274290548961:ios:8f933c4630e7a434b217a0',
    messagingSenderId: '274290548961',
    projectId: 'accounts-manager-24563',
    storageBucket: 'accounts-manager-24563.appspot.com',
    iosBundleId: 'com.hefestsoft.managerAccounts',
  );

  // NOTE: macOS configuration is currently using the same values as iOS.
  // This is a fallback so the app can run on macOS. For a proper setup,
  // re-run the FlutterFire CLI (`flutterfire configure`) and add macOS
  // support so the macOS-specific appId/apiKey (if different) are used.
  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyD_WIR_5QdnUFp83ySrN0sIvAgNA2LWnA4',
    appId: '1:274290548961:ios:8f933c4630e7a434b217a0',
    messagingSenderId: '274290548961',
    projectId: 'accounts-manager-24563',
    storageBucket: 'accounts-manager-24563.appspot.com',
    iosBundleId: 'com.hefestsoft.managerAccounts',
  );

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyBg6-g3o2kMQmDsKm9ME91xClnVChjRiJ0',
    appId: '1:274290548961:web:c8e0d4e7ee53d2eeb217a0',
    messagingSenderId: '274290548961',
    projectId: 'accounts-manager-24563',
    authDomain: 'accounts-manager-24563.firebaseapp.com',
    storageBucket: 'accounts-manager-24563.appspot.com',
    measurementId: 'G-8WR0S38FPR',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'AIzaSyBg6-g3o2kMQmDsKm9ME91xClnVChjRiJ0',
    appId: '1:274290548961:web:f33e49592cccceb6b217a0',
    messagingSenderId: '274290548961',
    projectId: 'accounts-manager-24563',
    authDomain: 'accounts-manager-24563.firebaseapp.com',
    storageBucket: 'accounts-manager-24563.appspot.com',
    measurementId: 'G-8RJ7LZ290S',
  );

}